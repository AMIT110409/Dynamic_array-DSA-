//User function Template for Java

class Solution{
    static int dp[][][];
    static int countWays(int N, String S){
        // code here
        dp=new int[203][203][];
        //for(int i[][]:dp) for(int j[]:i) Arrays.fill(j,-1);
        int k[]=func(S,0,N-1);
        return k[0]%1003;
    }
    static int[] func(String s,int lo,int hi){
        if(lo==hi){
            if(s.charAt(lo)=='T') return new int[]{1,0};
            return new int[]{0,1};
        }
        if(dp[lo][hi]!=null) return dp[lo][hi];
        int pos=0,neg=0;
        for(int i=lo;i<=hi;i++){
            if(s.charAt(i)=='&' || s.charAt(i)=='|' || s.charAt(i)=='^'){
                int k1[]=func(s,lo,i-1);
                int k2[]=func(s,i+1,hi);
                if(s.charAt(i)=='&'){
                    pos+=k1[0]*k2[0];
                    neg+=k1[0]*k2[1];
                    neg+=k1[1]*k2[0];
                    neg+=k1[1]*k2[1];
                }else if(s.charAt(i)=='|'){
                    pos+=k1[0]*k2[0];
                    pos+=k1[0]*k2[1];
                    pos+=k1[1]*k2[0];
                    neg+=k1[1]*k2[1];
                }else{
                    neg+=k1[0]*k2[0];
                    pos+=k1[0]*k2[1];
                    pos+=k1[1]*k2[0];
                    neg+=k1[1]*k2[1];
                }
            }
        }
        return dp[lo][hi]=new int[]{pos%1003,neg%1003};
    }
}
