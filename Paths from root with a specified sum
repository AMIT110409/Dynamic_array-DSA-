#User function Template for python3

'''
# Tree Node
class Node:
    def __init__(self, val):
        self.right = None
        self.data = val
        self.left = None
        
'''

class Solution:
    def printPaths(self, root, sum):
        result = []
        path = []

        def find_paths(node, current_sum):
            if not node:
                return

            path.append(node.data)
            current_sum += node.data

            # Check if the current path equals the target sum
            if current_sum == sum:
                result.append(path[:])

            # Recursively search left and right subtrees
            find_paths(node.left, current_sum)
            find_paths(node.right, current_sum)

            # Backtrack by removing the last element (pop)
            path.pop()

        find_paths(root, 0)
        return result

