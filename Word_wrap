import sys 

INT_MAX = sys.maxsize


class Solution:
    def solveWordWrap(self, nums, k):
        #Code here
        n = len(nums)
        
        dp = [0] * n 
        last_indices = [0] * n 
        
        dp[n-1] = 0 
        last_indices[n-1] = n-1
        
        for i in range(n-2, -1, -1):
            curr_len = -1
            dp[i] = INT_MAX
            for j in range(i, n):
                curr_len += (1 + nums[j])
                
                if curr_len > k:
                    break 
                
                cost = 0
                if j == n - 1:
                    cost = 0 
                else:
                    cost = (k - curr_len) * (k - curr_len) + dp[j+1]
                
                if cost < dp[i]:
                    dp[i] = cost 
                    last_indices[i] = j 
        
        res = 0 
        i = 0 
        while i < n:
            if last_indices[i] != n - 1:
                words_len = 0 
                for idx in range(i, last_indices[i] + 1):
                    words_len += nums[idx]
                    
                spaces_between = last_indices[i] - i
                res += (k - words_len - spaces_between) * (k - words_len - spaces_between)
                
            i = last_indices[i] + 1
                
        return res
    
